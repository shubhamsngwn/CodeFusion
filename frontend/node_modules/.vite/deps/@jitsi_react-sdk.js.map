{
  "version": 3,
  "sources": ["../../@jitsi/react-sdk/lib/components/JitsiMeeting.js", "../../@jitsi/react-sdk/lib/constants/index.js", "../../@jitsi/react-sdk/lib/init.js", "../../@jitsi/react-sdk/lib/utils/index.js", "../../@jitsi/react-sdk/lib/components/JaaSMeeting.js"],
  "sourcesContent": ["import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { DEFAULT_DOMAIN } from '../constants';\r\nimport { fetchExternalApi } from '../init';\r\nimport { generateComponentId, getAppId } from '../utils';\r\n/**\r\n * Returns the JitsiMeeting Component with access to a custom External API\r\n * to be used as-it-is in React projects\r\n *\r\n * @param {IJitsiMeetingProps} props the component's props\r\n * @returns {ReactElement} the `JitsiMeeting` Component\r\n * @example\r\n  ```js\r\n    <JitsiMeeting\r\n        domain='meet.jit.si'\r\n        roomName: 'TestingJitsiMeetingComponent'\r\n        spinner={CustomSpinner}\r\n        onApiReady={(externalApi) => console.log(externalApi)}\r\n    />\r\n  ```\r\n */\r\nconst JitsiMeeting = ({ domain = DEFAULT_DOMAIN, roomName, configOverwrite, interfaceConfigOverwrite, jwt, invitees, devices, userInfo, release, lang, spinner: Spinner, onApiReady, onReadyToClose, getIFrameRef }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [apiLoaded, setApiLoaded] = useState(false);\r\n    const externalApi = useRef();\r\n    const apiRef = useRef();\r\n    const meetingRef = useRef(null);\r\n    const componentId = useMemo(() => generateComponentId('jitsiMeeting'), [generateComponentId]);\r\n    useEffect(() => {\r\n        fetchExternalApi(domain, release, getAppId(roomName))\r\n            .then((api) => {\r\n            externalApi.current = api;\r\n            setApiLoaded(true);\r\n        })\r\n            .catch((e) => console.error(e.message));\r\n    }, []);\r\n    const loadIFrame = useCallback((JitsiMeetExternalAPI) => {\r\n        apiRef.current = new JitsiMeetExternalAPI(domain, {\r\n            roomName,\r\n            configOverwrite,\r\n            interfaceConfigOverwrite,\r\n            jwt,\r\n            invitees,\r\n            devices,\r\n            userInfo,\r\n            release,\r\n            lang,\r\n            parentNode: meetingRef.current\r\n        });\r\n        setLoading(false);\r\n        if (apiRef.current) {\r\n            typeof onApiReady === 'function' && onApiReady(apiRef.current);\r\n            apiRef.current.on('readyToClose', () => {\r\n                typeof onReadyToClose === 'function' && onReadyToClose();\r\n            });\r\n            if (meetingRef.current && typeof getIFrameRef === 'function') {\r\n                getIFrameRef(meetingRef.current);\r\n            }\r\n        }\r\n    }, [\r\n        apiRef,\r\n        meetingRef,\r\n        onApiReady,\r\n        onReadyToClose,\r\n        getIFrameRef,\r\n        domain,\r\n        roomName,\r\n        configOverwrite,\r\n        interfaceConfigOverwrite,\r\n        jwt,\r\n        invitees,\r\n        devices,\r\n        userInfo,\r\n        release,\r\n        lang\r\n    ]);\r\n    useEffect(() => {\r\n        if (apiLoaded && !apiRef.current) {\r\n            if (externalApi.current) {\r\n                loadIFrame(externalApi.current);\r\n            }\r\n        }\r\n    }, [apiLoaded, loadIFrame]);\r\n    const renderLoadingSpinner = useCallback(() => {\r\n        if (!Spinner) {\r\n            return null;\r\n        }\r\n        if (!loading || apiRef.current) {\r\n            return null;\r\n        }\r\n        return _jsx(Spinner, {}, void 0);\r\n    }, [Spinner, apiRef.current]);\r\n    return (_jsxs(_Fragment, { children: [renderLoadingSpinner(), _jsx(\"div\", { id: componentId, ref: meetingRef }, componentId)] }, void 0));\r\n};\r\nexport default JitsiMeeting;\r\n", "export const DEFAULT_DOMAIN = 'meet.jit.si';\r\nexport const JAAS_STAGING_DOMAIN = 'stage.8x8.vc';\r\nexport const JAAS_PROD_DOMAIN = '8x8.vc';\r\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { DEFAULT_DOMAIN } from './constants';\r\nconst loadExternalApi = (domain, release, appId) => __awaiter(void 0, void 0, void 0, function* () {\r\n    return new Promise((resolve, reject) => {\r\n        if (window.JitsiMeetExternalAPI) {\r\n            return resolve(window.JitsiMeetExternalAPI);\r\n        }\r\n        const script = document.createElement('script');\r\n        const releaseParam = release ? `?release=${release}` : '';\r\n        const appIdPath = appId ? `${appId}/` : '';\r\n        script.async = true;\r\n        script.src = `https://${domain}/${appIdPath}external_api.js${releaseParam}`;\r\n        script.onload = () => resolve(window.JitsiMeetExternalAPI);\r\n        script.onerror = () => reject(new Error(`Script load error: ${script.src}`));\r\n        document.head.appendChild(script);\r\n    });\r\n});\r\nlet scriptPromise;\r\n/**\r\n * Injects the external_api.js script for the corresponding domain in DOM\r\n * and resolves with either the `JitsiMeetExternalApi` class definition or an error.\r\n *\r\n * Only the first script will be injected, therefore avoid using multiple instances\r\n * with mixed domains and release version at the same time.\r\n *\r\n * @param {string} domain - The domain of the external API\r\n * @param {string} release - The Jitsi Meet release. Expected format: 'release-1234'\r\n * @param {string} appId - The tenant for JaaS Meetings\r\n * @returns {Promise<JitsiMeetExternalApi>} - The JitsiMeetExternalAPI or an error\r\n */\r\nexport const fetchExternalApi = (domain = DEFAULT_DOMAIN, release, appId) => {\r\n    if (scriptPromise) {\r\n        return scriptPromise;\r\n    }\r\n    scriptPromise = loadExternalApi(domain, release, appId);\r\n    return scriptPromise;\r\n};\r\n", "import { JAAS_PROD_DOMAIN, JAAS_STAGING_DOMAIN } from '../constants';\r\n/**\r\n * Returns the complete room name\r\n *\r\n * @param {string} roomName\r\n * @param {string} tenant\r\n * @returns {string} the complete room name\r\n */\r\nexport const getRoomName = (roomName, tenant) => {\r\n    if (tenant) {\r\n        return `${tenant}/${roomName}`;\r\n    }\r\n    return roomName;\r\n};\r\n/**\r\n * Returns the appId or tenant value\r\n *\r\n * @param {string} roomName\r\n * @returns {string|undefined}\r\n */\r\nexport const getAppId = (roomName) => {\r\n    const roomParts = roomName.split('/');\r\n    if (roomParts.length <= 1) {\r\n        return;\r\n    }\r\n    return roomParts[0];\r\n};\r\n/**\r\n * Returns the JaaS domain\r\n *\r\n * @param {boolean|undefined} useStaging\r\n * @returns {string} the JaaS domain\r\n */\r\nexport const getJaaSDomain = (useStaging) => {\r\n    if (useStaging) {\r\n        return JAAS_STAGING_DOMAIN;\r\n    }\r\n    return JAAS_PROD_DOMAIN;\r\n};\r\nlet instancesCounter = 0;\r\n/**\r\n * Generates an unique id\r\n * @param {string} prefix\r\n * @returns {string} the component id\r\n */\r\nexport const generateComponentId = (prefix) => `${prefix}-${instancesCounter++}`;\r\n", "var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { getJaaSDomain, getRoomName } from '../utils';\r\nimport { JitsiMeeting } from '.';\r\n/**\r\n * Returns the JaaSMeeting Component with access to the 8x8.vc External API\r\n * to be used as-it-is in React projects\r\n *\r\n * @param {IJaaSMeetingProps} props the component's props\r\n * @returns {ReactElement} the `JaaSMeeting` Component\r\n * @example\r\n  ```js\r\n      <JaaSMeeting\r\n        roomName: 'TestingJaaSMeetingComponent'\r\n        appId='exampleAppId'\r\n        spinner={CustomSpinner}\r\n        onApiReady={(externalApi) => console.log(externalApi)}\r\n      />\r\n  ```\r\n */\r\nconst JaaSMeeting = (_a) => {\r\n    var { appId, roomName, useStaging, release } = _a, rest = __rest(_a, [\"appId\", \"roomName\", \"useStaging\", \"release\"]);\r\n    return (_jsx(JitsiMeeting, Object.assign({ domain: getJaaSDomain(useStaging), roomName: getRoomName(roomName, appId), release: release }, rest), void 0));\r\n};\r\nexport default JaaSMeeting;\r\n"],
  "mappings": "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",
  "names": ["_jsx", "_jsxs", "_Fragment", "import_jsx_runtime", "_jsx"]
}
